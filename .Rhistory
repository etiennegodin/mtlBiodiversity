freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
df %>%
group_by(qrt_name) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class)
)
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
df %>%
group_by(qrt_name) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class)
)
qrt_eco <- df %>%
group_by(qrt_name) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class)
)
view(qrt_eco)
View(con)
View(df)
view(df)
library(DBI)
library(duckdb)
library(tidyverse)
con <- dbConnect(duckdb::duckdb(), dbdir = "C:/Users/manat/Documents/Projects/mtlBiodiversity/data/db/mtlbio.duckdb", read_only = TRUE)
dbListTables(con)
df <- dbReadTable(con, "quartiers_sjoin")   # read into R
view(df)
df <- df %>%
filter(!is.na(qrt_id))
?unique
#Shannon index helper function
shannon <- function(x) {
freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
qrt_eco <- df %>%
group_by(qrt_name) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class)
)
view(qrt_eco)
qrt_eco <- df %>%
group_by(qrt_name) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
qrt_eco <- df %>%
group_by(qrt_id) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
qrt_eco <- df %>%
group_by(grid_id) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
write.csv(qrt_eco, "data.csv", row.names=FALSE)
df_viz <- df %>%
group_by(grid_id) %>%
summarise(
grid_id = unique(grid_id),
geom = unique(geom),
)
view(df_viz)
df_viz <- df %>%
group_by(grid_id) %>%
summarise(
geom = unique(geom)
)
view(df_viz)
df_eco <- df %>%
group_by(grid_id) %>%
summarise(
geom = geom,
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
df_eco <- df %>%
group_by(grid_id) %>%
reframe(
geom = geom,
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
df_eco <- df %>%
group_by(grid_id) %>%
reframe(
geom = unique(geom),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
df_eco <- df %>%
group_by(qrt_id) %>%
reframe(
qrt_name = first(qrt_name),
geom = first(geom),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
library(DBI)
library(duckdb)
library(tidyverse)
con <- dbConnect(duckdb::duckdb(), dbdir = "C:/Users/manat/Documents/Projects/mtlBiodiversity/data/db/mtlbio.duckdb", read_only = TRUE)
dbListTables(con)
df <- dbReadTable(con, "quartiers_sjoin")   # read into R
view(df)
df <- df %>%
filter(!is.na(grid_id))
view(df)
df <- df %>%
filter(!is.na(grid_id))
view(df)
#Shannon index helper function
shannon <- function(x) {
freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
df_eco <- df %>%
group_by(qrt_id) %>%
reframe(
qrt_name = first(qrt_name),
geom = first(geom),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
library(DBI)
library(duckdb)
library(tidyverse)
con <- dbConnect(duckdb::duckdb(), dbdir = "C:/Users/manat/Documents/Projects/mtlBiodiversity/data/db/mtlbio.duckdb", read_only = TRUE)
dbListTables(con)
df <- dbReadTable(con, "quartiers_sjoin")   # read into R
df <- df %>%
filter(!is.na(grid_id))
view(df)
#Shannon index helper function
shannon <- function(x) {
freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
df_eco <- df %>%
group_by(qrt_id) %>%
reframe(
qrt_name = first(qrt_name),
geom = first(geom),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
library(DBI)
library(duckdb)
library(tidyverse)
con <- dbConnect(duckdb::duckdb(), dbdir = "C:/Users/manat/Documents/Projects/mtlBiodiversity/data/db/mtlbio.duckdb", read_only = TRUE)
dbListTables(con)
df <- dbReadTable(con, "quartiers_sjoin")   # read into R
df <- df %>%
filter(!is.na(grid_id))
view(df)
#Shannon index helper function
shannon <- function(x) {
freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
df_eco <- df %>%
group_by(qrt_id) %>%
reframe(
across(qrt_name, first),
across(geom, first),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
library(DBI)
library(duckdb)
library(tidyverse)
con <- dbConnect(duckdb::duckdb(), dbdir = "C:/Users/manat/Documents/Projects/mtlBiodiversity/data/db/mtlbio.duckdb", read_only = TRUE)
dbListTables(con)
df <- dbReadTable(con, "quartiers_sjoin")   # read into R
df <- df %>%
filter(!is.na(qrt_id))
view(df)
#Shannon index helper function
shannon <- function(x) {
freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
df_eco <- df %>%
group_by(qrt_id) %>%
reframe(
across(qrt_name, first),
across(geom, first),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(qrt_eco)
gc()
view(df_eco)
df_eco <- df %>%
group_by(qrt_id) %>%
summarise(
across(qrt_name, first),
across(geom, first),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(df_eco)
df_eco <- df %>%
group_by(qrt_id) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(df_eco)
df_eco <- df %>%
group_by(qrt_id) %>%
summarise(
qrt_name = first(qrt_name),
geom = first(geom),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(df_eco)
df_eco <- df %>%
group_by(qrt_id) %>%
summarise(
qrt_name = unique(qrt_name),
geom = unique(geom),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(df_eco)
install.packages("arrow")   # only once
library(arrow)
library(tidyverse)
library(DBI)
library(duckdb)
library(arrow)
con <- dbConnect(duckdb::duckdb(), dbdir = "C:/Users/manat/Documents/Projects/mtlBiodiversity/data/db/mtlbio.duckdb", read_only = TRUE)
dbListTables(con)
df <- dbReadTable(con, "quartiers_sjoin")   # read into R
df <- df %>%
filter(!is.na(qrt_id))
view(df)
#Shannon index helper function
shannon <- function(x) {
freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
df_eco <- df %>%
group_by(qrt_id) %>%
summarise(
qrt_name = unique(qrt_name),
geom = unique(geom),
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(df_eco)
write_parquet(df_eco, "data/observations.parquet")
write_parquet(df_eco, "data/processed/qrt_eco.parquet")
install.packages("sf")
source("C:/Users/manat/Documents/Projects/mtlBiodiversity/R/101.R", echo = TRUE)
df_eco$geom_wkb <- sf::st_as_binary(df_eco$geom)
#Convert geom
my_sf <- st_as_sf(df_eco, coords = c("longitude", "latitude"), crs = 4326)
gc()
source("C:/Users/manat/Documents/Projects/mtlBiodiversity/R/101.R", echo = TRUE)
source("C:/Users/manat/Documents/Projects/mtlBiodiversity/R/101.R", echo = TRUE)
df_eco <- df %>%
group_by(qrt_id) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(df_eco)
write_parquet(df_eco, "data/processed/quartiers.parquet")
source("C:/Users/manat/Documents/Projects/mtlBiodiversity/R/quartiers_analysis_01.R", echo = TRUE)
source("C:/Users/manat/Documents/Projects/mtlBiodiversity/R/quartiers_analysis_01.R", echo = TRUE)
library(tidyverse)
library(DBI)
library(duckdb)
library(arrow)
library(sf) ## for geom
con <- dbConnect(duckdb::duckdb(), dbdir = "C:/Users/manat/Documents/Projects/mtlBiodiversity/data/db/mtlbio.duckdb", read_only = TRUE)
dbListTables(con)
df <- dbReadTable(con, "grid_sjoin")   # read into R
df <- df %>%
filter(!is.na(grid_id))
view(df)
#Shannon index helper function
shannon <- function(x) {
freq <- table(x)          #count of each species
p <- freq / sum(freq)     # proportions
-sum(p*log(p))            # H
}
simpson <- function(x) {
freq <- table(x)
p <- freq / sum(freq)
1 - sum(p^2)                    # Simpson diversity
}
df_eco <- df %>%
group_by(grid_id) %>%
summarise(
observations = n(),
species_richness = n_distinct(species),
shannon_index = shannon(species),
simpson_index = simpson(species),
genus_richness = n_distinct(genus),
family_richness = n_distinct(family),
order_richness = n_distinct(order),
class_richness = n_distinct(class),
phylum_richness = n_distinct(phylum)
)
view(df_eco)
write_parquet(df_eco, "data/processed/grid.parquet")
source("C:/Users/manat/Documents/Projects/mtlBiodiversity/R/grid_analysis_01.R", echo = TRUE)
